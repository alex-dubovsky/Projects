library(DoubleML)
library(devtools)
library(remotes)
library(vars)
library(readxl)
library(fbi)
library(ggpattern)
library(dplyr)
library(ggplot2)
library(ggpubr)
library(reshape2)
library(bigtime)
library(xtable)
library(stats)
library(rrpack)
library(MTS)
library(urca)
library(Matrix)
library(MCMCpack)
library(tictoc)
library(parallel)
library(doParallel)
library(foreach)
library(tseries)
library(missMethods)
library(norm)
library(data.table)
library(glmnet)
library(here)
source(here("UCL/Dissertation", "DFM_Functions.R"))
source(here("UCL/Dissertation", "Data Functions.R"))
setwd(here("UCL/Dissertation/Outputs"))
path = here("UCL/Dissertation/Data")
files = list.files(path, pattern = "\\.xlsx?$", full.names = TRUE)
all_list <- lapply(files, read_excel)
stems = tools::file_path_sans_ext(basename(files)) #file_path_sans_ext = filepaths without extensions, basename = remove all of the path up to last separator(/)
names(all_list) = stems
View(all_list)
View(all_list[[1]])
View(all_list[[4]])
flow_prefixes = c(
"GDP","EXPGS","IMPGS","GFCE","HFCE",
"CONSD","CONSND","CONSSD","CONSSV",
"GCF","GCFC","GFACON","GFAMG",
"WS","ESC","CAREG"
)
prefix = function(x) sub("_[^_]+$", "", x)
prefix
prefix(all_list[[1]])
View(all_list)
x[, quarter := as.yearqtr(get(date_col))]
x = as.data.table(dt)
dt = all_list[[4]]
x = as.data.table(dt)
View(x)
x[, quarter := as.yearqtr(get(date_col))]
date_col = "Time"
x[, quarter := as.yearqtr(get(date_col))]
View(x)
all_list[[2]]
View(all_list[[2]])
value_cols = setdiff(names(x), c(date_col, "quarter"))
value_cols
if (!inherits(x[[date_col]], "Date")) x[, (date_col) := as.Date(get(date_col))]
x[, quarter := as.yearqtr(get(date_col))]
value_cols = setdiff(names(x), c(date_col, "quarter"))
value_cols
monthly_flow_prefixes = c(
"EXPGS","IMPGS","GFCE","HFCE",
"CONSD","CONSND","CONSSD","CONSSV",
"GCF","GCFC","GFACON","GFAMG",
"WS","ESC","CAREG"
)
prefix = function(x) sub("_[^_]+$", "", x)
prefix(all_list[[1]])
x = as.data.table(dt)
monthly_flow_id = c(
"EXPGS","IMPGS","GFCE","HFCE",
"CONSD","CONSND","CONSSD","CONSSV",
"GCF","GCFC","GFACON","GFAMG",
"WS","ESC","CAREG"
)
series_id <- function(x) sub("\\..*$", "", sub("_[^_]+$", "", x))
View(all_list)
prep = ensure_date(dt, date_col)
class(all_list[[4]]["Time"])
x = prep$dt
x = dt
dt = all_list
x = dt
date_col = date_col
ountry_suffix = "_EA"
# keep requested country
keep <- c(date_col, grep(paste0(country_suffix, "$"), names(x), value = TRUE))
country_suffix = "_EA"
# keep requested country
keep <- c(date_col, grep(paste0(country_suffix, "$"), names(x), value = TRUE))
keep
# keep requested country
keep = c(date_col, grep(paste0(country_suffix, "$"), names(x), value = TRUE))
keep
dt = all_list[["EA"]]
dt
dt = all_list[[4]]
dt
x = dt
# keep requested country
keep = c(date_col, grep(paste0(country_suffix, "$"), names(x), value = TRUE))
keep
length(keep)
View(all_list)
View(all_list[[4]])
X = DT
x = dt
value_cols <- setdiff(names(x), c(date_col, "quarter"))
value_cols
length(value_cols()
length(value_cols)
value_cols <- setdiff(names(x), date_col)
values_cols
value_cols
if (!length(value_cols)) stop("No series columns found.")
long = melt(x, id.vars = c(date_col, "quarter"),
measure.vars = value_cols,
variable.name = "var", value.name = "value",
variable.factor = FALSE)
# Euro Area
EA_Q = read_xlsx(here("UCL/Dissertation/Data/Quarterly","EAdataQM_BN_LT.xlsx")) # "UCL/Dissertation/Data/Quarterly","EAdataQM_BN_LT.xlsx"
View(EA_Q)
View(all_list)
View(all_list[[4]])
source(here("UCL/Dissertation", "Data Functions.R"))
aggregate_monthly_to_quarterly(all_list[[4]])
monthly_flow_id = c(
"EXPGS","IMPGS","GFCE","HFCE",
"CONSD","CONSND","CONSSD","CONSSV",
"GCF","GCFC","GFACON","GFAMG",
"WS","ESC","CAREG"
)
aggregate_monthly_to_quarterly(all_list[[4]])
source(here("UCL/Dissertation", "Data Functions.R"))
aggregate_monthly_to_quarterly(all_list[[4]])
source(here("UCL/Dissertation", "Data Functions.R"))
aggregate_monthly_to_quarterly(all_list[[4]])
source(here("UCL/Dissertation", "Data Functions.R"))
aggregate_monthly_to_quarterly(all_list[[4]])
EA = aggregate_monthly_to_quarterly(all_list[[4]])
View(EA)
series_id <- function(x) sub("\\..*$", "", sub("_[^_]+$", "", x))
series_id
series_id(all_list)
names = series_id(all_list)
source(here("UCL/Dissertation", "Data Functions.R"))
res <- build_panels_for_list(all_list, date_col = "Time", flow_ids = monthly_flow_id)
View(res)
res$quarterly$ATdata
View(res$quarterly$EAdata)
res$quarterly$EAdata['GDP_EA']
Data_list = build_panels_for_list(all_list, date_col = "Time", flow_ids = monthly_flow_id)
source(here("UCL/Dissertation", "Data Functions.R"))
monthly_stock_id = c( # prefixes of the variables in each dataset which are flow variables
"IRT3M","IRT6M","LTIRT",
# (7) Industrial production & turnover indexes
"IPMN","IPCAG","IPDOG","IPIDCOG","IPINDCOG","IPING","IPINRG",
"TRNNM","TRNCAG","TRNCOG","TRNDCG","TRNNDCG","TRNING","TRNNRG",
# (8) Prices
"PPICAG","PPICOG","PPIDCOG","PPINDCOG","PPING","PPINRG",
"HICPOV","HICPNEF","HICPCG","HICPIN","HICPSV","HICPNG",
# (9) Confidence indicators
"ICONFIX","CCONFIX","ESENTX","KCONFIX","RTCONFIX","SCONFIX","BCI","CCI",
# (10) Monetary aggregates (levels)
"CURR","M1","M2",
# (11) Others
"SHIX"
)
monthly_flow_id = c(
"CAREG"
)
source(here("UCL/Dissertation", "Data Functions.R"))
Data_list = aggregate_monthlies_by_id(dt = all_list)
Data_list = aggregate_monthlies_by_id(dt = all_list[[4]])
source(here("UCL/Dissertation", "Data Functions.R"))
Data_list =  aggregate_list_monthlies(all_list, date_col = "Time")
View(Data_list)
View(Data_list[[4]])
View(Data_list[[4]]$GDP_EA)
View(Data_list[[4]]$GDP_EA$Values)
x = Data_list[[4]]$GDP_EA
class(x)
is.integer(x)
any(x %% 1 != 0)
ea_Q[1:10, .(Time, GDP_EA)]
x[1:10, .(Time, GDP_EA)]
ea_Q <- aggregate_monthlies_by_id(all_list[[4]], date_col = "Time")
View(ea_Q)
ea_Q[1:10, .(Time, GDP_EA)]
ea_Q[1:10, .(Time, GDP_EA_fmt = sprintf("%.3f", GDP_EA))]
